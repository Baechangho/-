import java.io.*;
import java.security.*;

public class ReturnDigest extends Thread {
	private String filename;
	private byte[] digest;
//	private boolean stop = false;
//	private boolean flag = true;

	public void setStop(boolean stop) {
		this.stop = stop;
	}
	public void setFlag(boolean flag) {
		this.flag = flag;
	}
	public ReturnDigest(String filename) {
		this.filename = filename;
	}

	public void run() {
//		while (!stop) {
			try {
				FileInputStream in = new FileInputStream(filename);
				MessageDigest sha = MessageDigest.getInstance("SHA-256");
				DigestInputStream din = new DigestInputStream(in, sha);
				while (din.read() != -1)
					;
				din.close();
				digest = sha.digest();
			} catch (IOException ex) {
				System.err.println(ex);
			} catch (NoSuchAlgorithmException ex) {
				System.err.println(ex);
			}
//			if (flag) {
//				System.out.println("File name " + filename + "Thread is working...");
//				try {
//					Thread.sleep(1000);
//				} catch (InterruptedException e) {
//					// TODO Auto-generated catch block
//					e.printStackTrace();
//				}
//			} else {
//				Thread.yield();
//			}
//		}
	}

	public byte[] getDigest() {
		return digest;

	}
}
